{"ast":null,"code":"var _jsxFileName = \"/Users/nandinibhardwaj/software-development/react-simple-projects/react-typescript/src/stories/Button2.stories.js\",\n  _primaryButtton$param,\n  _primaryButtton$param2,\n  _primaryButtton$param3,\n  _Primary$parameters,\n  _Primary$parameters2,\n  _Primary$parameters2$,\n  _Error$parameters,\n  _Error$parameters2,\n  _Error$parameters2$do,\n  _Warning$parameters,\n  _Warning$parameters2,\n  _Warning$parameters2$;\nimport { Children } from \"react\";\nimport Button2 from \"../components/Button2.js\";\n// import type {Meta, StoryObj} from '@storybook/react';\n\n// export default {\n//     title: 'Button2',\n//     component : Button2,\n//     // argsTypes: {handleClick: {action : \" hannndle click\"} } ,\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'React/Button2',\n  argTypes: {\n    text: {\n      control: 'text'\n    },\n    isDisabled: {\n      control: 'boolean'\n    },\n    shadow: {\n      control: 'boolean'\n    },\n    size: {\n      control: {\n        type: 'select',\n        options: ['small', 'medium', 'large']\n      }\n    },\n    type: {\n      control: {\n        type: 'select',\n        options: ['filled', 'outline', 'text']\n      }\n    },\n    textColor: {\n      control: {\n        type: 'select',\n        options: ['default', 'white', 'primary']\n      }\n    }\n  }\n};\nconst Template = args => {\n  console.log(args);\n  return /*#__PURE__*/_jsxDEV(Button2, {\n    ...args,\n    children: args.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_c = Template;\nexport const primaryButtton = Template.bind({});\nprimaryButtton.args = {\n  backgroundColor: 'red',\n  label: \"Click me again\"\n};\nexport const Primary = () => /*#__PURE__*/_jsxDEV(Button2, {\n  backgroundColor: \"orange\",\n  label: \"Press me\",\n  children: \" Primary  \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 30\n}, this);\n_c2 = Primary;\nexport const Error = () => /*#__PURE__*/_jsxDEV(Button2, {\n  backgroundColor: \"red\",\n  label: \"Press me\",\n  children: \" Error \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 28\n}, this);\n_c3 = Error;\nexport const Warning = () => /*#__PURE__*/_jsxDEV(Button2, {\n  backgroundColor: \"yellow\",\n  label: \"Press me\",\n  children: \" warn \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 30\n}, this);\n_c4 = Warning;\nprimaryButtton.parameters = {\n  ...primaryButtton.parameters,\n  docs: {\n    ...((_primaryButtton$param = primaryButtton.parameters) === null || _primaryButtton$param === void 0 ? void 0 : _primaryButtton$param.docs),\n    source: {\n      originalSource: \"args => {\\n  console.log(args);\\n  return <Button2 {...args}>{args.children}</Button2>;\\n}\",\n      ...((_primaryButtton$param2 = primaryButtton.parameters) === null || _primaryButtton$param2 === void 0 ? void 0 : (_primaryButtton$param3 = _primaryButtton$param2.docs) === null || _primaryButtton$param3 === void 0 ? void 0 : _primaryButtton$param3.source)\n    }\n  }\n};\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...((_Primary$parameters = Primary.parameters) === null || _Primary$parameters === void 0 ? void 0 : _Primary$parameters.docs),\n    source: {\n      originalSource: \"() => <Button2 backgroundColor=\\\"orange\\\" label=\\\"Press me\\\"> Primary  </Button2>\",\n      ...((_Primary$parameters2 = Primary.parameters) === null || _Primary$parameters2 === void 0 ? void 0 : (_Primary$parameters2$ = _Primary$parameters2.docs) === null || _Primary$parameters2$ === void 0 ? void 0 : _Primary$parameters2$.source)\n    }\n  }\n};\nError.parameters = {\n  ...Error.parameters,\n  docs: {\n    ...((_Error$parameters = Error.parameters) === null || _Error$parameters === void 0 ? void 0 : _Error$parameters.docs),\n    source: {\n      originalSource: \"() => <Button2 backgroundColor=\\\"red\\\" label=\\\"Press me\\\"> Error </Button2>\",\n      ...((_Error$parameters2 = Error.parameters) === null || _Error$parameters2 === void 0 ? void 0 : (_Error$parameters2$do = _Error$parameters2.docs) === null || _Error$parameters2$do === void 0 ? void 0 : _Error$parameters2$do.source)\n    }\n  }\n};\nWarning.parameters = {\n  ...Warning.parameters,\n  docs: {\n    ...((_Warning$parameters = Warning.parameters) === null || _Warning$parameters === void 0 ? void 0 : _Warning$parameters.docs),\n    source: {\n      originalSource: \"() => <Button2 backgroundColor=\\\"yellow\\\" label=\\\"Press me\\\"> warn </Button2>\",\n      ...((_Warning$parameters2 = Warning.parameters) === null || _Warning$parameters2 === void 0 ? void 0 : (_Warning$parameters2$ = _Warning$parameters2.docs) === null || _Warning$parameters2$ === void 0 ? void 0 : _Warning$parameters2$.source)\n    }\n  }\n};\n;\nPrimary.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Primary\"\n};\nError.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Error\"\n};\nWarning.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Warning\"\n};\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Template\");\n$RefreshReg$(_c2, \"Primary\");\n$RefreshReg$(_c3, \"Error\");\n$RefreshReg$(_c4, \"Warning\");","map":{"version":3,"names":[],"sources":[""],"sourcesContent":[null],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}