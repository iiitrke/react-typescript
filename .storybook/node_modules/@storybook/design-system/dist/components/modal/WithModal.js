"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = WithModal;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _Modal = require("./Modal");

var _excluded = ["isOpen", "onOpen", "onClose", "modal", "children"],
    _excluded2 = ["startOpen", "onOpen", "onClose"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var PureWithModal = function PureWithModal(_ref) {
  var isOpen = _ref.isOpen,
      onOpen = _ref.onOpen,
      onClose = _ref.onClose,
      modal = _ref.modal,
      children = _ref.children,
      rest = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, _react.Children.only(children({
    isOpen: isOpen,
    onOpen: onOpen,
    onClose: onClose
  })), /*#__PURE__*/_react["default"].createElement(_Modal.Modal, (0, _extends2["default"])({
    isOpen: isOpen,
    onClose: onClose
  }, rest), modal));
};

function WithModal(_ref2) {
  var _ref2$startOpen = _ref2.startOpen,
      startOpen = _ref2$startOpen === void 0 ? false : _ref2$startOpen,
      onOpen = _ref2.onOpen,
      onClose = _ref2.onClose,
      rest = (0, _objectWithoutProperties2["default"])(_ref2, _excluded2);

  var _useState = (0, _react.useState)(startOpen),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isOpen = _useState2[0],
      onSetIsOpen = _useState2[1];

  var handleOpen = function handleOpen() {
    onSetIsOpen(true);

    if (onOpen) {
      onOpen();
    }
  };

  var handleClose = function handleClose() {
    onSetIsOpen(false);

    if (onClose) {
      onClose();
    }
  };

  return /*#__PURE__*/_react["default"].createElement(PureWithModal, (0, _extends2["default"])({
    isOpen: isOpen,
    onOpen: handleOpen,
    onClose: handleClose
  }, rest));
}