import { ComponentProps, ReactNode } from 'react';
import { Modal } from './Modal';
declare const PureWithModal: ({ isOpen, onOpen, onClose, modal, children, ...rest }: Props & Omit<ComponentProps<typeof Modal>, 'children'>) => JSX.Element;
type AnyFn = (...args: any[]) => void;
interface Props {
    isOpen: boolean;
    onOpen: AnyFn;
    onClose: AnyFn;
    modal: ComponentProps<typeof Modal>['children'];
    children: (o: {
        isOpen?: boolean;
        onClose?: AnyFn;
        onOpen?: AnyFn;
    }) => ReactNode;
}
export default function WithModal({ startOpen, onOpen, onClose, ...rest }: Omit<ComponentProps<typeof PureWithModal>, 'onOpen' | 'onClose' | 'isOpen'> & {
    startOpen?: boolean;
    onOpen?: AnyFn;
    onClose?: AnyFn;
}): JSX.Element;
export {};
//# sourceMappingURL=WithModal.d.ts.map