import React, { ComponentProps, FunctionComponent, ReactNode } from 'react';
import { Icon } from './Icon';
interface SelectProps {
    disabled?: boolean;
    inProgress?: boolean;
}
declare const Selector: import("@storybook/theming").StyledComponent<{
    theme?: import("@storybook/theming").Theme;
    as?: React.ElementType<any>;
} & SelectProps, React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>, {}>;
interface OptionProps {
    label: string;
    value: string;
}
interface Props {
    options: OptionProps[];
    value: string;
    appearance?: 'default' | 'tertiary';
    label: string;
    hideLabel?: boolean;
    error?: ReactNode;
    icon?: ComponentProps<typeof Icon>['icon'];
    className?: string;
    inProgress?: boolean;
    disabled?: boolean;
    stackLevel?: 'top' | 'middle' | 'bottom';
}
export declare const Select: FunctionComponent<Props & ComponentProps<typeof Selector>>;
export {};
//# sourceMappingURL=Select.d.ts.map